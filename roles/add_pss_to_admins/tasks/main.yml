---
# Why do we have to do this lookup? Because if the user specified a hostname > 15 characters
# Windows will truncate the computer name to the first 15 (plus a '$') and computer names
# by default are not assigned a UPN in active directory
# This block must be in each SCCM role since we do not know which will be run first (the user may change the order of hosts)
- name: Set cache variable name
  ansible.builtin.set_fact:
    cache_var_name: "ludus_sccm_site_server_samaccountname_{{ ludus_sccm_site_server_hostname | replace('-', '_') }}"

- name: "Get sAMAccountName for {{ ludus_sccm_site_server_hostname }}"
  when: hostvars["localhost"][cache_var_name] is undefined
  block:
    - name: "Query DC to get sAMAccountName for {{ ludus_sccm_site_server_hostname }}"
      microsoft.ad.object_info:
        filter: 'DNSHostName -like "{{ ludus_sccm_site_server_hostname }}*"'
        properties: "sAMAccountName"
      register: ludus_sccm_site_server_sam_lookup
      # This delegation prevents us from having to install the ActiveDirectory powershell module on this host
      delegate_to: "{{ ludus_dc_vm_name }}"

    - name: "Show the sAMAccountName for {{ ludus_sccm_site_server_hostname }}"
      ansible.builtin.debug:
        msg: "{{ ludus_sccm_site_server_sam_lookup.objects | map(attribute='sAMAccountName') | first }}"

    - name: Set the site server sAMAccountName
      ansible.builtin.set_fact:
        "{{ cache_var_name }}": "{{ ludus_sccm_site_server_sam_lookup.objects | map(attribute='sAMAccountName') | first }}"
      delegate_to: localhost
      delegate_facts: true # Use localhost to share this var between sccm hosts (like a cache)

- name: Add the Site Server as a Local Admin
  ansible.windows.win_group_membership:
    name: Administrators
    members:
      - '{{ ludus_domain_netbios_name }}\{{ hostvars["localhost"][cache_var_name] }}'
    state: present
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: '{{ ludus_domain_fqdn }}\{{ defaults.ad_domain_admin }}'
    ansible_become_password: '{{ defaults.ad_domain_admin_password }}'
    ansible_become_flags: "logon_type=interactive logon_flags=with_profile"