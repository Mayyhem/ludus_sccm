---
- name: Get adksetup.exe
  ansible.builtin.include_tasks:
    file: download_file.yml
  vars:
    ludus_sccm_file_name: adksetup.exe
    ludus_sccm_url: "{{ ludus_sccm_adksetup_url }}"
    ludus_sccm_host_path: "C:\\ludus\\sccm"

- name: Get adkwinpesetup.exe
  ansible.builtin.include_tasks:
    file: download_file.yml
  vars:
    ludus_sccm_file_name: adkwinpesetup.exe
    ludus_sccm_url: "{{ ludus_sccm_adkwinpesetup_url }}"
    ludus_sccm_host_path: "C:\\ludus\\sccm"

- name: Install adksetup.exe
  ansible.windows.win_command: 'C:\ludus\sccm\adksetup.exe /quiet /ceip off /features OptionId.DeploymentTools OptionId.UserStateMigrationTool'
  args:
    creates: "{{ ludus_sccm_adksetup_creates_path }}"
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: '{{ ludus_domain_fqdn }}\{{ defaults.ad_domain_admin }}'
    ansible_become_password: '{{ defaults.ad_domain_admin_password }}'
    ansible_become_flags: "logon_type=interactive logon_flags=with_profile"

- name: Install adkwinpesetup
  ansible.windows.win_command: 'C:\ludus\sccm\adkwinpesetup.exe /quiet /ceip off /features OptionId.WindowsPreinstallationEnvironment'
  args:
    creates: "{{ ludus_sccm_adkwinpesetup_creates_path }}"
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: '{{ ludus_domain_fqdn }}\{{ defaults.ad_domain_admin }}'
    ansible_become_password: '{{ defaults.ad_domain_admin_password }}'
    ansible_become_flags: "logon_type=interactive logon_flags=with_profile"

- name: Get Configmgr_2023
  ansible.builtin.include_tasks:
    file: download_file.yml
  vars:
    ludus_sccm_file_name: MCM_Configmgr_2303.exe
    ludus_sccm_url: "{{ ludus_sccm_configmgr_url }}"
    ludus_sccm_host_path: "C:\\ludus\\sccm"

- name: Unzip Setup
  ansible.windows.win_command: 'C:\ludus\sccm\MCM_Configmgr_2303.exe /s -dC:\ludus\sccm'
  args:
    creates: C:\cd.retail.LN
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: '{{ ludus_domain_fqdn }}\{{ defaults.ad_domain_admin }}'
    ansible_become_password: '{{ defaults.ad_domain_admin_password }}'
    ansible_become_flags: "logon_type=interactive logon_flags=with_profile"

- name: Template ConfigMgrSetup.ini
  ansible.windows.win_template:
    src: "{{ ludus_sccm_win_sccm_config_default_template }}"
    dest: "C:\\ludus\\sccm\\ConfigMgrSetup.ini"

- name: Template SystemManagement.ps1
  ansible.windows.win_template:
    src: "{{ ludus_sccm_system_management_template }}"
    dest: "C:\\ludus\\sccm\\SystemManagement.ps1"

- name: Create SCCM pre-req folder
  ansible.windows.win_file:
    path: "{{ ludus_sccm_win_sccm_config_default_prereq_path }}"
    state: directory

- name: Create System Management Container and Configure Permissions
  ansible.windows.win_shell: |
   C:\ludus\sccm\SystemManagement.ps1
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: '{{ ludus_domain_fqdn }}\{{ defaults.ad_domain_admin }}'
    ansible_become_password: '{{ defaults.ad_domain_admin_password }}'
    ansible_become_flags: "logon_type=interactive logon_flags=with_profile"

- name: Extend Schema
  ansible.windows.win_shell: |
   C:\ludus\sccm\cd.retail.LN\SMSSETUP\BIN\X64\extadsch.exe
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: '{{ ludus_domain_fqdn }}\{{ defaults.ad_domain_admin }}'
    ansible_become_password: '{{ defaults.ad_domain_admin_password }}'
    ansible_become_flags: "logon_type=interactive logon_flags=with_profile"

- name: Setup SCCM
  ansible.windows.win_shell: |
   C:\ludus\sccm\cd.retail.LN\SMSSETUP\BIN\X64\setup.exe /script C:\ludus\sccm\ConfigMgrSetup.ini
  register: setup_configmgr
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: '{{ ludus_domain_fqdn }}\{{ defaults.ad_domain_admin }}'
    ansible_become_password: '{{ defaults.ad_domain_admin_password }}'
    ansible_become_flags: "logon_type=interactive logon_flags=with_profile"
  args:
    creates: "C:\\Program Files\\Microsoft Configuration Manager\\bin\\x64\\ccm.dll"

- name: Check for success
  ansible.windows.win_stat:
    path: "C:\\Program Files\\Microsoft Configuration Manager\\bin\\x64\\ccm.dll"
  register: ccm_dll

- name: Get SCCM error log
  ansible.builtin.slurp:
    src: "C:\\ludus\\sccm\\ConfigMgrSetup.log"
  register: configmgrsetup_log
  when: not ccm_dll.stat.exists

- name: Reboot after SCCM error (allows for Setup to run again)
  ansible.windows.win_reboot:
  when: not ccm_dll.stat.exists

- name: Show ConfigMgrSetup.log
  ansible.builtin.debug:
    msg: "{{ configmgrsetup_log['content'] | b64decode }}"
  when: not ccm_dll.stat.exists

- name: Fail ansible on failed install
  ansible.builtin.fail:
    msg: "SCCM failed to install. Check the log output above for details."
  when: not ccm_dll.stat.exists

- name: Reboot after SCCM site installation
  ansible.windows.win_reboot:
  when: setup_configmgr.changed and ccm_dll.stat.exists
